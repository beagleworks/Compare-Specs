openapi: 3.0.3
info:
  title: Furikae Denpyo API
  version: 0.1.0
servers:
  - url: http://localhost:8787
paths:
  /v1/vouchers:
    get:
      summary: List vouchers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voucher'
    post:
      summary: Create voucher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher'
  /v1/vouchers/{id}:
    get:
      summary: Get voucher
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher'
        '404':
          description: Not Found
    put:
      summary: Update voucher
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher'
        '404':
          description: Not Found
    delete:
      summary: Delete voucher
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /v1/vouchers/{id}/pdf:
    post:
      summary: Generate voucher PDF
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: PDF
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          description: Not Found
  /v1/accounts:
    get:
      summary: List accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
  /v1/settings/password:
    put:
      summary: Set or update password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [password]
              properties:
                password:
                  type: string
      responses:
        '204':
          description: No Content
  /v1/auth:
    post:
      summary: Authenticate using password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [password]
              properties:
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
        '401':
          description: Unauthorized
components:
  schemas:
    EntryBase:
      type: object
      required: [side, accountType, accountName, amount, description]
      properties:
        side:
          type: string
          enum: [D, C]
        accountType:
          type: string
          enum: [standard, other]
        accountName:
          type: string
        amount:
          type: integer
          minimum: 1
        description:
          type: string
          maxLength: 500
    Entry:
      allOf:
        - $ref: '#/components/schemas/EntryBase'
        - type: object
          properties:
            id:
              type: integer
            lineNo:
              type: integer
    VoucherBase:
      type: object
      required: [date, entries]
      properties:
        date:
          type: string
          format: date
        voucherNumber:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/EntryBase'
    VoucherCreate:
      allOf:
        - $ref: '#/components/schemas/VoucherBase'
    VoucherUpdate:
      allOf:
        - $ref: '#/components/schemas/VoucherBase'
    Voucher:
      allOf:
        - $ref: '#/components/schemas/VoucherBase'
        - type: object
          properties:
            id:
              type: integer
            totalDebit:
              type: integer
            totalCredit:
              type: integer
            createdAt:
              type: string
            updatedAt:
              type: string
    Account:
      type: object
      required: [code, name]
      properties:
        code:
          type: string
        name:
          type: string
        sortOrder:
          type: integer
